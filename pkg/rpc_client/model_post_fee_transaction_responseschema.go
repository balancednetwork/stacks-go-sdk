/*
Stacks 2.0+ RPC API

This is the documentation for the `stacks-node` RPC interface. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rpc_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostFeeTransactionResponseschema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostFeeTransactionResponseschema{}

// PostFeeTransactionResponseschema POST response for estimated fee
type PostFeeTransactionResponseschema struct {
	EstimatedCostScalar int32 `json:"estimated_cost_scalar"`
	CostScalarChangeByByte *float32 `json:"cost_scalar_change_by_byte,omitempty"`
	EstimatedCost PostFeeTransactionResponseschemaEstimatedCost `json:"estimated_cost"`
	Estimations []PostFeeTransactionResponseschemaEstimationsInner `json:"estimations,omitempty"`
}

type _PostFeeTransactionResponseschema PostFeeTransactionResponseschema

// NewPostFeeTransactionResponseschema instantiates a new PostFeeTransactionResponseschema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostFeeTransactionResponseschema(estimatedCostScalar int32, estimatedCost PostFeeTransactionResponseschemaEstimatedCost) *PostFeeTransactionResponseschema {
	this := PostFeeTransactionResponseschema{}
	this.EstimatedCostScalar = estimatedCostScalar
	this.EstimatedCost = estimatedCost
	return &this
}

// NewPostFeeTransactionResponseschemaWithDefaults instantiates a new PostFeeTransactionResponseschema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostFeeTransactionResponseschemaWithDefaults() *PostFeeTransactionResponseschema {
	this := PostFeeTransactionResponseschema{}
	return &this
}

// GetEstimatedCostScalar returns the EstimatedCostScalar field value
func (o *PostFeeTransactionResponseschema) GetEstimatedCostScalar() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EstimatedCostScalar
}

// GetEstimatedCostScalarOk returns a tuple with the EstimatedCostScalar field value
// and a boolean to check if the value has been set.
func (o *PostFeeTransactionResponseschema) GetEstimatedCostScalarOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EstimatedCostScalar, true
}

// SetEstimatedCostScalar sets field value
func (o *PostFeeTransactionResponseschema) SetEstimatedCostScalar(v int32) {
	o.EstimatedCostScalar = v
}

// GetCostScalarChangeByByte returns the CostScalarChangeByByte field value if set, zero value otherwise.
func (o *PostFeeTransactionResponseschema) GetCostScalarChangeByByte() float32 {
	if o == nil || IsNil(o.CostScalarChangeByByte) {
		var ret float32
		return ret
	}
	return *o.CostScalarChangeByByte
}

// GetCostScalarChangeByByteOk returns a tuple with the CostScalarChangeByByte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFeeTransactionResponseschema) GetCostScalarChangeByByteOk() (*float32, bool) {
	if o == nil || IsNil(o.CostScalarChangeByByte) {
		return nil, false
	}
	return o.CostScalarChangeByByte, true
}

// HasCostScalarChangeByByte returns a boolean if a field has been set.
func (o *PostFeeTransactionResponseschema) HasCostScalarChangeByByte() bool {
	if o != nil && !IsNil(o.CostScalarChangeByByte) {
		return true
	}

	return false
}

// SetCostScalarChangeByByte gets a reference to the given float32 and assigns it to the CostScalarChangeByByte field.
func (o *PostFeeTransactionResponseschema) SetCostScalarChangeByByte(v float32) {
	o.CostScalarChangeByByte = &v
}

// GetEstimatedCost returns the EstimatedCost field value
func (o *PostFeeTransactionResponseschema) GetEstimatedCost() PostFeeTransactionResponseschemaEstimatedCost {
	if o == nil {
		var ret PostFeeTransactionResponseschemaEstimatedCost
		return ret
	}

	return o.EstimatedCost
}

// GetEstimatedCostOk returns a tuple with the EstimatedCost field value
// and a boolean to check if the value has been set.
func (o *PostFeeTransactionResponseschema) GetEstimatedCostOk() (*PostFeeTransactionResponseschemaEstimatedCost, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EstimatedCost, true
}

// SetEstimatedCost sets field value
func (o *PostFeeTransactionResponseschema) SetEstimatedCost(v PostFeeTransactionResponseschemaEstimatedCost) {
	o.EstimatedCost = v
}

// GetEstimations returns the Estimations field value if set, zero value otherwise.
func (o *PostFeeTransactionResponseschema) GetEstimations() []PostFeeTransactionResponseschemaEstimationsInner {
	if o == nil || IsNil(o.Estimations) {
		var ret []PostFeeTransactionResponseschemaEstimationsInner
		return ret
	}
	return o.Estimations
}

// GetEstimationsOk returns a tuple with the Estimations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFeeTransactionResponseschema) GetEstimationsOk() ([]PostFeeTransactionResponseschemaEstimationsInner, bool) {
	if o == nil || IsNil(o.Estimations) {
		return nil, false
	}
	return o.Estimations, true
}

// HasEstimations returns a boolean if a field has been set.
func (o *PostFeeTransactionResponseschema) HasEstimations() bool {
	if o != nil && !IsNil(o.Estimations) {
		return true
	}

	return false
}

// SetEstimations gets a reference to the given []PostFeeTransactionResponseschemaEstimationsInner and assigns it to the Estimations field.
func (o *PostFeeTransactionResponseschema) SetEstimations(v []PostFeeTransactionResponseschemaEstimationsInner) {
	o.Estimations = v
}

func (o PostFeeTransactionResponseschema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostFeeTransactionResponseschema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["estimated_cost_scalar"] = o.EstimatedCostScalar
	if !IsNil(o.CostScalarChangeByByte) {
		toSerialize["cost_scalar_change_by_byte"] = o.CostScalarChangeByByte
	}
	toSerialize["estimated_cost"] = o.EstimatedCost
	if !IsNil(o.Estimations) {
		toSerialize["estimations"] = o.Estimations
	}
	return toSerialize, nil
}

func (o *PostFeeTransactionResponseschema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"estimated_cost_scalar",
		"estimated_cost",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostFeeTransactionResponseschema := _PostFeeTransactionResponseschema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostFeeTransactionResponseschema)

	if err != nil {
		return err
	}

	*o = PostFeeTransactionResponseschema(varPostFeeTransactionResponseschema)

	return err
}

type NullablePostFeeTransactionResponseschema struct {
	value *PostFeeTransactionResponseschema
	isSet bool
}

func (v NullablePostFeeTransactionResponseschema) Get() *PostFeeTransactionResponseschema {
	return v.value
}

func (v *NullablePostFeeTransactionResponseschema) Set(val *PostFeeTransactionResponseschema) {
	v.value = val
	v.isSet = true
}

func (v NullablePostFeeTransactionResponseschema) IsSet() bool {
	return v.isSet
}

func (v *NullablePostFeeTransactionResponseschema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostFeeTransactionResponseschema(val *PostFeeTransactionResponseschema) *NullablePostFeeTransactionResponseschema {
	return &NullablePostFeeTransactionResponseschema{value: val, isSet: true}
}

func (v NullablePostFeeTransactionResponseschema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostFeeTransactionResponseschema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


