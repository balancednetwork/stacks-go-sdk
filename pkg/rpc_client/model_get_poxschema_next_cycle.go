/*
Stacks 2.0+ RPC API

This is the documentation for the `stacks-node` RPC interface. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rpc_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetPoxschemaNextCycle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPoxschemaNextCycle{}

// GetPoxschemaNextCycle struct for GetPoxschemaNextCycle
type GetPoxschemaNextCycle struct {
	// The reward cycle number
	Id int32 `json:"id"`
	// The threshold amount for obtaining a slot in this reward cycle.
	MinThresholdUstx int32 `json:"min_threshold_ustx"`
	// The total amount of stacked microstacks in this reward cycle.
	StackedUstx int32 `json:"stacked_ustx"`
	// The minimum amount that can be used to submit a `stack-stx` call.
	MinIncrementUstx int32 `json:"min_increment_ustx"`
	// The burn block height when the prepare phase for this cycle begins. Any eligible stacks must be stacked before this block.
	PreparePhaseStartBlockHeight int32 `json:"prepare_phase_start_block_height"`
	// The number of burn blocks until the prepare phase for this cycle starts. If the prepare phase for this cycle already started, this value will be negative.
	BlocksUntilPreparePhase int32 `json:"blocks_until_prepare_phase"`
	// The burn block height when the reward phase for this cycle begins. Any eligible stacks must be stacked before this block.
	RewardPhaseStartBlockHeight int32 `json:"reward_phase_start_block_height"`
	// The number of burn blocks until this reward phase starts.
	BlocksUntilRewardPhase int32 `json:"blocks_until_reward_phase"`
	// The remaining amount of liquid STX that must vote to reject the next reward cycle to prevent the next reward cycle from activating.
	UstxUntilPoxRejection int32 `json:"ustx_until_pox_rejection"`
}

type _GetPoxschemaNextCycle GetPoxschemaNextCycle

// NewGetPoxschemaNextCycle instantiates a new GetPoxschemaNextCycle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPoxschemaNextCycle(id int32, minThresholdUstx int32, stackedUstx int32, minIncrementUstx int32, preparePhaseStartBlockHeight int32, blocksUntilPreparePhase int32, rewardPhaseStartBlockHeight int32, blocksUntilRewardPhase int32, ustxUntilPoxRejection int32) *GetPoxschemaNextCycle {
	this := GetPoxschemaNextCycle{}
	this.Id = id
	this.MinThresholdUstx = minThresholdUstx
	this.StackedUstx = stackedUstx
	this.MinIncrementUstx = minIncrementUstx
	this.PreparePhaseStartBlockHeight = preparePhaseStartBlockHeight
	this.BlocksUntilPreparePhase = blocksUntilPreparePhase
	this.RewardPhaseStartBlockHeight = rewardPhaseStartBlockHeight
	this.BlocksUntilRewardPhase = blocksUntilRewardPhase
	this.UstxUntilPoxRejection = ustxUntilPoxRejection
	return &this
}

// NewGetPoxschemaNextCycleWithDefaults instantiates a new GetPoxschemaNextCycle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPoxschemaNextCycleWithDefaults() *GetPoxschemaNextCycle {
	this := GetPoxschemaNextCycle{}
	return &this
}

// GetId returns the Id field value
func (o *GetPoxschemaNextCycle) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetPoxschemaNextCycle) SetId(v int32) {
	o.Id = v
}

// GetMinThresholdUstx returns the MinThresholdUstx field value
func (o *GetPoxschemaNextCycle) GetMinThresholdUstx() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinThresholdUstx
}

// GetMinThresholdUstxOk returns a tuple with the MinThresholdUstx field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetMinThresholdUstxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinThresholdUstx, true
}

// SetMinThresholdUstx sets field value
func (o *GetPoxschemaNextCycle) SetMinThresholdUstx(v int32) {
	o.MinThresholdUstx = v
}

// GetStackedUstx returns the StackedUstx field value
func (o *GetPoxschemaNextCycle) GetStackedUstx() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StackedUstx
}

// GetStackedUstxOk returns a tuple with the StackedUstx field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetStackedUstxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StackedUstx, true
}

// SetStackedUstx sets field value
func (o *GetPoxschemaNextCycle) SetStackedUstx(v int32) {
	o.StackedUstx = v
}

// GetMinIncrementUstx returns the MinIncrementUstx field value
func (o *GetPoxschemaNextCycle) GetMinIncrementUstx() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinIncrementUstx
}

// GetMinIncrementUstxOk returns a tuple with the MinIncrementUstx field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetMinIncrementUstxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinIncrementUstx, true
}

// SetMinIncrementUstx sets field value
func (o *GetPoxschemaNextCycle) SetMinIncrementUstx(v int32) {
	o.MinIncrementUstx = v
}

// GetPreparePhaseStartBlockHeight returns the PreparePhaseStartBlockHeight field value
func (o *GetPoxschemaNextCycle) GetPreparePhaseStartBlockHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PreparePhaseStartBlockHeight
}

// GetPreparePhaseStartBlockHeightOk returns a tuple with the PreparePhaseStartBlockHeight field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetPreparePhaseStartBlockHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreparePhaseStartBlockHeight, true
}

// SetPreparePhaseStartBlockHeight sets field value
func (o *GetPoxschemaNextCycle) SetPreparePhaseStartBlockHeight(v int32) {
	o.PreparePhaseStartBlockHeight = v
}

// GetBlocksUntilPreparePhase returns the BlocksUntilPreparePhase field value
func (o *GetPoxschemaNextCycle) GetBlocksUntilPreparePhase() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BlocksUntilPreparePhase
}

// GetBlocksUntilPreparePhaseOk returns a tuple with the BlocksUntilPreparePhase field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetBlocksUntilPreparePhaseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlocksUntilPreparePhase, true
}

// SetBlocksUntilPreparePhase sets field value
func (o *GetPoxschemaNextCycle) SetBlocksUntilPreparePhase(v int32) {
	o.BlocksUntilPreparePhase = v
}

// GetRewardPhaseStartBlockHeight returns the RewardPhaseStartBlockHeight field value
func (o *GetPoxschemaNextCycle) GetRewardPhaseStartBlockHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RewardPhaseStartBlockHeight
}

// GetRewardPhaseStartBlockHeightOk returns a tuple with the RewardPhaseStartBlockHeight field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetRewardPhaseStartBlockHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RewardPhaseStartBlockHeight, true
}

// SetRewardPhaseStartBlockHeight sets field value
func (o *GetPoxschemaNextCycle) SetRewardPhaseStartBlockHeight(v int32) {
	o.RewardPhaseStartBlockHeight = v
}

// GetBlocksUntilRewardPhase returns the BlocksUntilRewardPhase field value
func (o *GetPoxschemaNextCycle) GetBlocksUntilRewardPhase() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BlocksUntilRewardPhase
}

// GetBlocksUntilRewardPhaseOk returns a tuple with the BlocksUntilRewardPhase field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetBlocksUntilRewardPhaseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlocksUntilRewardPhase, true
}

// SetBlocksUntilRewardPhase sets field value
func (o *GetPoxschemaNextCycle) SetBlocksUntilRewardPhase(v int32) {
	o.BlocksUntilRewardPhase = v
}

// GetUstxUntilPoxRejection returns the UstxUntilPoxRejection field value
func (o *GetPoxschemaNextCycle) GetUstxUntilPoxRejection() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UstxUntilPoxRejection
}

// GetUstxUntilPoxRejectionOk returns a tuple with the UstxUntilPoxRejection field value
// and a boolean to check if the value has been set.
func (o *GetPoxschemaNextCycle) GetUstxUntilPoxRejectionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UstxUntilPoxRejection, true
}

// SetUstxUntilPoxRejection sets field value
func (o *GetPoxschemaNextCycle) SetUstxUntilPoxRejection(v int32) {
	o.UstxUntilPoxRejection = v
}

func (o GetPoxschemaNextCycle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPoxschemaNextCycle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["min_threshold_ustx"] = o.MinThresholdUstx
	toSerialize["stacked_ustx"] = o.StackedUstx
	toSerialize["min_increment_ustx"] = o.MinIncrementUstx
	toSerialize["prepare_phase_start_block_height"] = o.PreparePhaseStartBlockHeight
	toSerialize["blocks_until_prepare_phase"] = o.BlocksUntilPreparePhase
	toSerialize["reward_phase_start_block_height"] = o.RewardPhaseStartBlockHeight
	toSerialize["blocks_until_reward_phase"] = o.BlocksUntilRewardPhase
	toSerialize["ustx_until_pox_rejection"] = o.UstxUntilPoxRejection
	return toSerialize, nil
}

func (o *GetPoxschemaNextCycle) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"min_threshold_ustx",
		"stacked_ustx",
		"min_increment_ustx",
		"prepare_phase_start_block_height",
		"blocks_until_prepare_phase",
		"reward_phase_start_block_height",
		"blocks_until_reward_phase",
		"ustx_until_pox_rejection",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetPoxschemaNextCycle := _GetPoxschemaNextCycle{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetPoxschemaNextCycle)

	if err != nil {
		return err
	}

	*o = GetPoxschemaNextCycle(varGetPoxschemaNextCycle)

	return err
}

type NullableGetPoxschemaNextCycle struct {
	value *GetPoxschemaNextCycle
	isSet bool
}

func (v NullableGetPoxschemaNextCycle) Get() *GetPoxschemaNextCycle {
	return v.value
}

func (v *NullableGetPoxschemaNextCycle) Set(val *GetPoxschemaNextCycle) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPoxschemaNextCycle) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPoxschemaNextCycle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPoxschemaNextCycle(val *GetPoxschemaNextCycle) *NullableGetPoxschemaNextCycle {
	return &NullableGetPoxschemaNextCycle{value: val, isSet: true}
}

func (v NullableGetPoxschemaNextCycle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPoxschemaNextCycle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


