/*
Stacks 2.0+ RPC API

Testing InfoAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package rpc_client

import (
	"context"
	"testing"

	"github.com/icon-project/stacks-go-sdk/pkg/rpc_client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_rpc_client_InfoAPIService(t *testing.T) {

	configuration := rpc_client.NewConfiguration()
	apiClient := rpc_client.NewAPIClient(configuration)

	t.Run("Test InfoAPIService GetBurnOps", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var burnHeight int32
		var opType string

		httpRes, err := apiClient.InfoAPI.GetBurnOps(context.Background(), burnHeight, opType).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InfoAPIService GetCoreApiInfo", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		ctx := context.WithValue(context.Background(), rpc_client.ContextServerIndex, 1)
		resp, httpRes, err := apiClient.InfoAPI.GetCoreApiInfo(ctx).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test InfoAPIService GetPoxInfo", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.InfoAPI.GetPoxInfo(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
